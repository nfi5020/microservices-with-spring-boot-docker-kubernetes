services:

  # Configuration for the rabbitmq
  rabbit:
    image: rabbitmq:3.12.0-management
    hostname: rabbitmq
    # Two ports because one port will take care of the management of the rabbitmq and the other port is for to take care of the core activities.
    ports:
      - "5672:5672"
      - "15672:15672"
    healthcheck:
      # This is to test the rabbitmq health. Provided by the rabbitmq official doc
      test: rabbitmq-diagnostics check_port_connectivity
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 5s
    extends:
      file: common-config.yml
      service: network-deploy-service

  # Configuration for configserver
  configserver:
    image: "najrulbiplob/configserver:s6"
    container_name: configserver-ms
    depends_on:
      rabbit:
        condition: service_healthy
    ports:
      - "8071:8071"
    # This healthcheck helps with testing if the configserver is ready with the configs or not.
    healthcheck:
      test: "curl --fail --silent localhost:8071/actuator/health/readiness | grep UP || exit 1"
      # Execute the healthcheck {start_period} after the 10 seconds. If there is failure retires of 10 times, interval of 10 seconds and timeout in 5 seconds.
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 10s
    extends:
      file: common-config.yml
      service: microservice-base-config


# Configuration for accounts containers
  accounts:
    image: "najrulbiplob/accounts:s6"
    container_name: account-ms
    ports:
    - "8080:8080"
    # {healthcheck of configserver} Below configs helps with checking service status of the configserver
    environment:
      SPRING_APPLICATION_NAME: accounts
    # This extends will help with reading repeating details from the common-config.yml file
    extends:
      file: common-config.yml
      service: microservice-configserver-config

# Configuration for loans containers
  loans:
    image: "najrulbiplob/loans:s6"
    container_name: loans-ms
    ports:
    - "8090:8090"
    # {healthcheck of configserver} Below configs helps with checking service status of the configserver
    environment:
      SPRING_APPLICATION_NAME: loans
    # This extends will help with reading repeating details from the common-config.yml file
    extends:
      file: common-config.yml
      service: microservice-configserver-config

# Configuration for cards containers
  cards:
    image: "najrulbiplob/cards:s6"
    container_name: cards-ms
    ports:
    - "9000:9000"
    # {healthcheck of configserver} Below configs helps with checking service status of the configserver
    environment:
      SPRING_APPLICATION_NAME: cards
    # This extends will help with reading repeating details from the common-config.yml file
    extends:
      file: common-config.yml
      service: microservice-configserver-config


# This helps with having all the microservices in the same network.
networks:
  eazybank:
    driver: "bridge"